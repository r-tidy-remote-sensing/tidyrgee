on:
  push:
    branches:
      - codcov-issue-34
  pull_request:
    branches:
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-pandoc@master

      - name: SETUP PYTHON
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.13

      - name: FIND ALL R PACKAGES DEPENDECIES OF RGEE
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: RETICULATE_PYTHON SETTING
        run: |
          reticulate_dir <- path.expand("~/.Renviron")
          fileConn <- file(reticulate_dir)
          pyPATH <- Sys.getenv("pythonLocation")
          writeLines(sprintf('RETICULATE_PYTHON="%s"', pyPATH), fileConn)
          close(fileConn)
        shell: Rscript {0}

      - name: DECRYPT rgee SECRETS
        run: ./.github/decrypt_secret.sh
        env:
          RGEE_SECRET_PASSPHRASE: ${{ secrets.RGEE_SECRET_PASSPHRASE }}

      - name: INSTALL SYSTEM DEPENDENCIES [macOS]
        if: runner.os == 'macOS'
        env:
          RHUB_PLATFORM: osx-x86_64-clang
        run: |
          brew install udunits
          brew install gdal
          brew install freetype
          brew install protobuf
          brew install v8
          cat <<EOT >> .Renviron
          PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
          PROJ_LIB=/usr/local/opt/proj/share/proj/
          EOT
          cat <<EOT >> .Rprofile
          config_args <- c("sf" = "--with-proj-lib=/usr/local/lib/", "rgdal" = "--with-proj-lib=/usr/local/lib/ --with-proj-include=/usr/local/include/")
          r <- getOption("repos")
          r["CRAN"] <- "https://cran.rstudio.com"
          options(configure.args = config_args, repos = r)
          EOT

      - name: INSTALL PYTHON DEPENDENCIES
        run: |
          pip install --upgrade pip
          pip install setuptools oauth2client earthengine-api numpy virtualenv

      - name: CACHE R PACKAGES
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: macOS-r-3.6-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: macOS-r-3.6-

      - name: INSTALL R TEST PACKAGES
        run: |
          install.packages(c("remotes", "Rcpp"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr", force = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: PREBUILD TESTING
        run: |
          earthengine -h
          ls $HOME/.config/earthengine/
          ls $HOME/.config/earthengine/ndef


      - name: INSTALL rgdal WITH CONFIGURE
        run: |
          install.packages("rgdal", type = "source", configure.args = "--with-proj-lib=/usr/local/lib/ --with-proj-include=/usr/local/include/")
        shell: Rscript {0}

      - name: INSTALL geojsonio
        run: |
          install.packages("geojsonio")
        shell: Rscript {0}

      # - name: CHECK
      #   env:
      #  _R_CHECK_CRAN_INCOMING_: false
      # run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
      # shell: Rscript {0}

      - name: SHOW TESTTHAT OUTPUT
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: UPLOAD CHECK RESULTS
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: macOS-r-3.6-results
          path: check

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
