on:
  push:
    branches:
      - codcov-issue-34
  pull_request:
    branches:
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-pandoc@master

      - name: SETUP PYTHON
        uses: actions/setup-python@v3

      - name: FIND ALL R PACKAGES DEPENDECIES OF RGEE
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: RETICULATE_PYTHON SETTING
        run: |
          reticulate_dir <- path.expand("~/.Renviron")
          fileConn <- file(reticulate_dir)
          pyPATH <- Sys.getenv("pythonLocation")
          writeLines(sprintf('RETICULATE_PYTHON="%s"', pyPATH), fileConn)
          close(fileConn)
        shell: Rscript {0}

      - name: commit files
        continue-on-error: true
        run: |
          today=$(date +"%Y-%m-%d %H:%M:%S")
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: INSTALL PYTHON DEPENDENCIES
        run: |
          pip install --upgrade pip
          pip install earthengine-api

      - name: INSTALL R TEST PACKAGES
        run: |
          install.packages(c("remotes", "Rcpp"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr", force = TRUE)
        shell: Rscript {0}

      - name: PREBUILD TESTING
        run: |
          earthengine -h
          ls $HOME/.config/earthengine/
          ls $HOME/.config/earthengine/ndef


      - name: INSTALL rgdal WITH CONFIGURE
        run: |
          install.packages("rgdal", type = "source", configure.args = "--with-proj-lib=/usr/local/lib/ --with-proj-include=/usr/local/include/")
        shell: Rscript {0}

      - name: INSTALL geojsonio
        run: |
          install.packages("geojsonio")
        shell: Rscript {0}

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
